#include<iostream>
using namespace std;
int Power(int a, int exp);
int takeLength(int num);
bool isPrime(int num);
int rotateNum(int num);
bool isCircularPrime(int num);

int main()
{
	int num;
	cout << "Enter the number:\n";
	cin >> num;
	isCircularPrime(num);
	cout << isCircularPrime(num);
	cout << "\n";
	return 0;
	
}
int Power(int a, int exp)
{
	int c = 1, p = 1;
	while (c <= exp)
	{
		p = p*a;
		c = c + 1;
	}
	return p;
}
int takeLength(int num)
{
	int l = 1,t=num,q;
	while (t>=10)
	{
		q = t / 10;
		l = l + 1;
		t = q;

	}
	return l;
}
bool isPrime(int num)
{
	int d = 2; bool flag = true;
	while (d < num)
	{
		if (num%d == 0)
		{
			flag = false;
		}
		d = d + 1;
	}
	return flag;
}
int rotateNum(int num)
{
	int rem, div, s, l, num1, i = 1;
	l = takeLength(num);
	s = Power(10, l - 1);

	while (i <= l)
	{
		rem = num % s;
		div = num / s;
		num1 = 10*rem + div;
		return num1;
		i = i + 1;
	}
}
bool isCircularPrime(int num)
{
	bool c2=true; int l,j=1;
	l = takeLength(num);
	while (j <= l)
	{
		    c2=isPrime(num);
			if (c2 == false)
				break;
			num = rotateNum(num);
		    j = j + 1;
	}
		return c2;
}

